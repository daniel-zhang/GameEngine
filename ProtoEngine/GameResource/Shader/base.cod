//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer PerFrame
{
    float3  gEyePosW
    <
        String tag = "cam_pos";
    >;                                  // Offset:    0, size:   12
}

cbuffer PerObj
{
    float4x4 gLocalToWorld
    <
        String tag = "local_to_world";
    >;                                  // Offset:    0, size:   64
    float4x4 gWorldToView
    <
        String tag = "world_to_view";
    >;                                  // Offset:   64, size:   64
    float4x4 gViewToProj
    <
        String tag = "view_to_proj";
    >;                                  // Offset:  128, size:   64
    float4x4 gWorldViewProj
    <
        String tag = "world_view_proj";
    >;                                  // Offset:  192, size:   64
    float4x4 gTexTransform
    <
        String tag = "tex_transform";
    >;                                  // Offset:  256, size:   64
    float4x4 gWorldInvTranspose
    <
        String tag = "world_inv_transpose";
    >;                                  // Offset:  320, size:   64
    Material gMaterial
    <
        String tag = "plain_material";
    >;                                  // Offset:  384, size:   64
}

//
// 2 local object(s)
//
Texture2D gDiffuseMap
<
    String tag = "texture";
>;
SamplerState AnisotropicSamplerState
<
    String tag = "anisotropic_sampler";
>
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 2 technique(s)
    //
    technique11 BaseTech
    <
        bool default_tech = true;
    >
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObj
                // {
                //
                //   float4x4 gLocalToWorld;            // Offset:    0 Size:    64
                //   float4x4 gWorldToView;             // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewToProj;              // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerObj                            cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[23], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 70 "D:\workspace\github\GameEngine\ProtoEngine\GameResource\Shader\base.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[20].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[21].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[22].xyzx  // vout<9:NaN:Inf>
                
                #line 74
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 77
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 84 "D:\workspace\github\GameEngine\ProtoEngine\GameResource\Shader\base.fx"
                mov o0.xyzw, l(0.300000,0.300000,0.300000,1.000000)  // PS<0: 0.3f,1: 0.3f,2: 0.3f,3: 1f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

    technique11 FancyTech
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObj
                // {
                //
                //   float4x4 gLocalToWorld;            // Offset:    0 Size:    64
                //   float4x4 gWorldToView;             // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewToProj;              // Offset:  128 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  192 Size:    64
                //   float4x4 gTexTransform;            // Offset:  256 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:  320 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  384
                //       float4 Diffuse;                // Offset:  400
                //       float4 Specular;               // Offset:  416
                //       float4 Reflect;                // Offset:  432
                //
                //   } gMaterial;                       // Offset:  384 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerObj                            cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[23], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 5
                
                #line 70 "D:\workspace\github\GameEngine\ProtoEngine\GameResource\Shader\base.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[20].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[21].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[22].xyzx  // vout<9:NaN:Inf>
                
                #line 74
                dp4 r3.x, r0.xyzw, cb0[12].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[13].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[14].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[15].xyzw  // vout<3:NaN:Inf>
                
                #line 77
                mov r0.xy, v2.xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r4.x, r0.xyzw, cb0[16].xyzw  // vout<10:NaN:Inf>
                dp4 r4.y, r0.xyzw, cb0[17].xyzw  // vout<11:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r4.xyxx  // VS<10:NaN:Inf,11:NaN:Inf>
                ret 
                // Approximately 21 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_output o0.xyzw
                
                #line 84 "D:\workspace\github\GameEngine\ProtoEngine\GameResource\Shader\base.fx"
                mov o0.xyzw, l(0.300000,0.300000,0.300000,1.000000)  // PS<0: 0.3f,1: 0.3f,2: 0.3f,3: 1f>
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

}

