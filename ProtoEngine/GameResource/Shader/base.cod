//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer PerFrame
{
    float3  gEyePosW
    <
        String tag = "cam_pos";
    >;                                  // Offset:    0, size:   12
    DirectionalLight gMainLight
    <
        String tag = "main_light";
    >;                                  // Offset:   16, size:   64
}

cbuffer PerObj
{
    float4x4 gLocalToWorld
    <
        String tag = "local_to_world";
    >;                                  // Offset:    0, size:   64
    float4x4 gWorldToView
    <
        String tag = "world_to_view";
    >;                                  // Offset:   64, size:   64
    float4x4 gViewToProj
    <
        String tag = "view_to_proj";
    >;                                  // Offset:  128, size:   64
    float4x4 gTexTransform
    <
        String tag = "tex_transform";
    >;                                  // Offset:  192, size:   64
    float4x4 gWorldInvTranspose
    <
        String tag = "world_inv_transpose";
    >;                                  // Offset:  256, size:   64
    Material gMaterial
    <
        String tag = "mesh_material";
    >;                                  // Offset:  320, size:   64
}

//
// 1 local object(s)
//
SamplerState AnisotropicSamplerState
<
    String tag = "anisotropic_sampler";
>
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(4);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 MainTech
    <
        String VertexFormat = "PosNormalTanTex";
    >
    {
        pass p0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerObj
                // {
                //
                //   float4x4 gLocalToWorld;            // Offset:    0 Size:    64
                //   float4x4 gWorldToView;             // Offset:   64 Size:    64
                //   float4x4 gViewToProj;              // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerObj                            cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TANGENT                  0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v3.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 9
                
                #line 64 "D:\workspace\github\GameEngine\ProtoEngine\GameResource\Shader\base.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[16].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[17].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[18].xyzx  // vout<9:NaN:Inf>
                
                #line 68
                mul r3.xyzw, cb0[0].xxxx, cb0[4].xyzw
                mul r4.xyzw, cb0[0].yyyy, cb0[5].xyzw
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[0].zzzz, cb0[6].xyzw
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[0].wwww, cb0[7].xyzw
                add r3.xyzw, r3.xyzw, r4.xyzw
                mul r4.xyzw, cb0[1].xxxx, cb0[4].xyzw
                mul r5.xyzw, cb0[1].yyyy, cb0[5].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, cb0[1].zzzz, cb0[6].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, cb0[1].wwww, cb0[7].xyzw
                add r4.xyzw, r4.xyzw, r5.xyzw
                mul r5.xyzw, cb0[2].xxxx, cb0[4].xyzw
                mul r6.xyzw, cb0[2].yyyy, cb0[5].xyzw
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, cb0[2].zzzz, cb0[6].xyzw
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, cb0[2].wwww, cb0[7].xyzw
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, cb0[3].xxxx, cb0[4].xyzw
                mul r7.xyzw, cb0[3].yyyy, cb0[5].xyzw
                add r6.xyzw, r6.xyzw, r7.xyzw
                mul r7.xyzw, cb0[3].zzzz, cb0[6].xyzw
                add r6.xyzw, r6.xyzw, r7.xyzw
                mul r7.xyzw, cb0[3].wwww, cb0[7].xyzw
                add r6.xyzw, r6.xyzw, r7.xyzw
                mul r7.xyzw, r3.xxxx, cb0[8].xyzw
                mul r8.xyzw, r3.yyyy, cb0[9].xyzw
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, r3.zzzz, cb0[10].xyzw
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r3.xyzw, r3.wwww, cb0[11].xyzw
                add r3.xyzw, r3.xyzw, r7.xyzw  // wvp<0:NaN:Inf,4:NaN:Inf,8:NaN:Inf,12:NaN:Inf>
                mul r7.xyzw, r4.xxxx, cb0[8].xyzw
                mul r8.xyzw, r4.yyyy, cb0[9].xyzw
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, r4.zzzz, cb0[10].xyzw
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r4.xyzw, r4.wwww, cb0[11].xyzw
                add r4.xyzw, r4.xyzw, r7.xyzw  // wvp<1:NaN:Inf,5:NaN:Inf,9:NaN:Inf,13:NaN:Inf>
                mul r7.xyzw, r5.xxxx, cb0[8].xyzw
                mul r8.xyzw, r5.yyyy, cb0[9].xyzw
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, r5.zzzz, cb0[10].xyzw
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r5.xyzw, r5.wwww, cb0[11].xyzw
                add r5.xyzw, r5.xyzw, r7.xyzw  // wvp<2:NaN:Inf,6:NaN:Inf,10:NaN:Inf,14:NaN:Inf>
                mul r7.xyzw, r6.xxxx, cb0[8].xyzw
                mul r8.xyzw, r6.yyyy, cb0[9].xyzw
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, r6.zzzz, cb0[10].xyzw
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r6.xyzw, r6.wwww, cb0[11].xyzw
                add r6.xyzw, r6.xyzw, r7.xyzw  // wvp<3:NaN:Inf,7:NaN:Inf,11:NaN:Inf,15:NaN:Inf>
                dp4 r3.x, r0.xyzw, r3.xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, r4.xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, r5.xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, r6.xyzw  // vout<3:NaN:Inf>
                
                #line 74
                mov r0.xy, v3.xyxx  // vout<10,11>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r0.xyxx  // VS<10,11>
                ret 
                // Approximately 74 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer PerFrame
                // {
                //
                //   float3 gEyePosW;                   // Offset:    0 Size:    12
                //   
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:   16
                //       float4 Diffuse;                // Offset:   32
                //       float4 Specular;               // Offset:   48
                //       float3 Direction;              // Offset:   64
                //       float pad;                     // Offset:   76
                //
                //   } gMainLight;                      // Offset:   16 Size:    64
                //
                // }
                //
                // cbuffer PerObj
                // {
                //
                //   float4x4 gLocalToWorld;            // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldToView;             // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewToProj;              // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:  256 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  320
                //       float4 Diffuse;                // Offset:  336
                //       float4 Specular;               // Offset:  352
                //       float4 Reflect;                // Offset:  368
                //
                //   } gMaterial;                       // Offset:  320 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // PerFrame                          cbuffer      NA          NA    0        1
                // PerObj                            cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[5], immediateIndexed
                dcl_constantbuffer cb1[23], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 9
                
                #line 81 "D:\workspace\github\GameEngine\ProtoEngine\GameResource\Shader\base.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[0].xyzx  // toEye<0:Inf,1:Inf,2:Inf>
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // distToEye<0:NaN:Inf>
                div r1.xyz, r1.xyzx, r0.wwww  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 94
                nop 
                mov r2.xyz, cb1[20].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[21].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[22].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[1].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[2].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[3].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[4].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r5.xyz, -r8.xyzx
                dp3 r2.w, r5.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r0.xyz, r0.xyzx, r2.wwww
                add r0.xyz, r5.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, r4.w
                exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                mul r0.yzw, r3.xxyz, r0.wwww
                mul r0.yzw, r6.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r4.xyzx, r0.xxxx
                mul r1.xyz, r7.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r0.xyz, r1.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r1.xyz, r1.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 94 "D:\workspace\github\GameEngine\ProtoEngine\GameResource\Shader\base.fx"
                mov r2.xyz, r2.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 100
                add r0.xyz, r0.xyzx, r2.xyzx
                mul r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 103
                mul r0.w, cb1[21].w, l(1.000000)  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 52 instruction slots used
                            
            };
        }

    }

}

